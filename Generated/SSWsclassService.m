/*
	SSWsclassService.m
	The implementation classes and methods for the WsclassService web service.
	Generated by SudzC.com
*/

#import "SSWsclassService.h"
				
#import "Soap.h"
	
#import "SSArrayOfHermandadws.h"
#import "SSArrayOfHermandad.h"
#import "SSArrayOfRecorridows.h"
#import "SSArrayOfRecorrido.h"
#import "SSArrayOfPublicidadws.h"
#import "SSArrayOfPublicidad.h"
#import "SSPatrocinadorWS.h"
#import "SSRecorridoWS.h"
#import "SSHermandadWS.h"
#import "SSPublicidadWS.h"

/* Implementation of the service */
				
@implementation SSWsclassService

	- (id) init
	{
		if(self = [super init])
		{
			self.serviceUrl = @"http://semanasanta.kometasoft.com/soapserver.php";
			self.namespace = @"http://crowfunding.kometasoft.com/soapserver.php";
			self.headers = nil;
			self.logging = NO;
		}
		return self;
	}
	
	- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
		if(self = [super initWithUsername:username andPassword:password]) {
		}
		return self;
	}
	
	+ (SSWsclassService*) service {
		return [SSWsclassService serviceWithUsername:nil andPassword:nil];
	}
	
	+ (SSWsclassService*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
		return [[SSWsclassService alloc] initWithUsername:username andPassword:password];
	}

		
	// Returns SSArrayOfHermandad*
	/* Obtiene las hermandades */
	- (SoapRequest*) getHermandades: (id <SoapDelegate>) handler offset: (int) offset
	{
		return [self getHermandades: handler action: nil offset: offset];
	}

	- (SoapRequest*) getHermandades: (id) _target action: (SEL) _action offset: (int) offset
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: offset] forName: @"offset"]];
		NSString* _envelope = [Soap createEnvelope: @"getHermandades" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://semanasanta.kometasoft.com/soapserver.php#getHermandades" postData: _envelope deserializeTo: [SSArrayOfHermandad alloc]];
		[_request send];
		return _request;
	}

	// Returns SSArrayOfRecorrido*
	/* Obtiene los recorridos */
	- (SoapRequest*) getRecorridos: (id <SoapDelegate>) handler offset: (int) offset
	{
		return [self getRecorridos: handler action: nil offset: offset];
	}

	- (SoapRequest*) getRecorridos: (id) _target action: (SEL) _action offset: (int) offset
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: offset] forName: @"offset"]];
		NSString* _envelope = [Soap createEnvelope: @"getRecorridos" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://semanasanta.kometasoft.com/soapserver.php#getRecorridos" postData: _envelope deserializeTo: [SSArrayOfRecorrido alloc]];
		[_request send];
		return _request;
	}

	// Returns SSArrayOfPublicidad*
	/* Obtiene las publicidades */
	- (SoapRequest*) getPublicidades: (id <SoapDelegate>) handler offset: (int) offset
	{
		return [self getPublicidades: handler action: nil offset: offset];
	}

	- (SoapRequest*) getPublicidades: (id) _target action: (SEL) _action offset: (int) offset
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: offset] forName: @"offset"]];
		NSString* _envelope = [Soap createEnvelope: @"getPublicidades" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://semanasanta.kometasoft.com/soapserver.php#getPublicidades" postData: _envelope deserializeTo: [SSArrayOfPublicidad alloc]];
		[_request send];
		return _request;
	}

	// Returns SSPatrocinadorWS*
	/* Obtiene el patrocinador si hay */
	- (SoapRequest*) getPatrocinador: (id <SoapDelegate>) handler
	{
		return [self getPatrocinador: handler action: nil];
	}

	- (SoapRequest*) getPatrocinador: (id) _target action: (SEL) _action
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		NSString* _envelope = [Soap createEnvelope: @"getPatrocinador" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"http://semanasanta.kometasoft.com/soapserver.php#getPatrocinador" postData: _envelope deserializeTo: [SSPatrocinadorWS alloc]];
		[_request send];
		return _request;
	}


@end
	